@using System.Reactive
@using MudBlazor.Markdown.Core.Services
@using ReactiveUI
@inherits LayoutComponentBase

<MudLayout>
	<MudAppBar Fixed="true" Elevation="5">
		<MudText Typo="Typo.h4">Server sample</MudText>
		<MudSpacer />
		<MudTooltip Text="Toggle theme">
			<MudIconButton Icon="@Icons.Material.Rounded.Brightness4" Color="Color.Inherit" Command="@ToggleTheme" />
		</MudTooltip>
	</MudAppBar>
	
	<MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
		<MarkdownNavMenu />
	</MudDrawer>

	<MudMainContent>
		<MudContainer Class="pt-2 pb-5">
			@Body
		</MudContainer>
	</MudMainContent>
</MudLayout>

@code
{
	private bool _drawerOpen = true;

	public MainLayout()
	{
		ToggleTheme = CreateToggleThemeCommand();
	}

	[Inject]
	private IThemeService? ThemeService { get; init; }

	private ReactiveCommand<Unit, Unit> ToggleTheme { get; }

	private ReactiveCommand<Unit, Unit> CreateToggleThemeCommand() =>
		ReactiveCommand
			.CreateFromTask(async () =>
			{
				if (ThemeService == null)
					return;

				await ThemeService.ToggleThemeAsync()
					.ConfigureAwait(false);
			});

	void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}
}
