@using System.Reactive.Linq
@using MudBlazor.Markdown.Core.Services.Interfaces

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
	<Found Context="routeData">
		<RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
	</Found>
	<NotFound>
		<LayoutView Layout="@typeof(MainLayout)">
			<p>Sorry, there's nothing at this address.</p>
		</LayoutView>
	</NotFound>
</Router>

<MudThemeProvider Theme="@CurrentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

@code
{
	private readonly MudTheme _light = new()
	{
		Palette = new Palette
		{
			Background = "#f2f2f2",
			BackgroundGrey = "#f2f2f2",
			Surface = "#f2f2f2",
			DrawerBackground = "#e0e0e0",
			OverlayDark = "#cfd1d0"
		}
	};

	private readonly MudTheme _dark = new()
	{
		Palette = new Palette
		{
			Black = "#27272f",
			Background = "#32333d",
			BackgroundGrey = "#32333d",
			Surface = "#32333d",
			DrawerBackground = "#373740",
			AppbarBackground = "#27272f",
			AppbarText = "rgba(255,255,255, 0.70)",
			TextPrimary = "rgba(255,255,255, 0.70)",
			TextSecondary = "rgba(255,255,255, 0.50)",
			ActionDefault = "#adadb1",
			ActionDisabled = "rgba(255,255,255, 0.26)",
			ActionDisabledBackground = "rgba(255,255,255, 0.12)",
			Divider = "rgba(255,255,255, 0.12)",
			DividerLight = "rgba(255,255,255, 0.06)",
			TableLines = "rgba(255,255,255, 0.12)",
			LinesDefault = "rgba(255,255,255, 0.12)",
			LinesInputs = "rgba(255,255,255, 0.3)",
			TextDisabled = "rgba(255,255,255, 0.2)"
		}
	};

	public App()
	{
		_currentTheme = _light;
	}

	[Inject]
	private IThemeService? ThemeService { get; init; }

	private MudTheme _currentTheme;
	private MudTheme CurrentTheme
	{
		get => _currentTheme;
		set
		{
			if (_currentTheme == value)
				return;

			_currentTheme = value;
			StateHasChanged();
		}
	}

	protected override void OnInitialized()
	{
		ThemeService?.IsDarkTheme
			.Select(SelectTheme)
			.Subscribe(x => CurrentTheme = x);

		MudTheme SelectTheme(bool isDark) =>
			isDark ? _dark : _light;
	}
}