@using MudBlazor.Markdown.Core.Services
@inject IThemeService ThemeService

<Router AppAssembly="@typeof(Program).Assembly">
	<Found Context="routeData">
		<RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
	</Found>
	<NotFound>
		<LayoutView Layout="@typeof(MainLayout)">
			<p>Sorry, there's nothing at this address.</p>
		</LayoutView>
	</NotFound>
</Router>

<MudThemeProvider Theme="@_theme" IsDarkMode="IsDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@code
{
	private readonly MudTheme _theme = new()
	{
		PaletteLight = new PaletteLight
		{
			Background = "#f2f2f2",
			BackgroundGray = "#f2f2f2",
			Surface = "#f2f2f2",
			DrawerBackground = "#e0e0e0",
			OverlayDark = "#cfd1d0",
		},
		PaletteDark = new PaletteDark
		{
			Black = "#27272f",
			Background = "#32333d",
			BackgroundGray = "#32333d",
			Surface = "#32333d",
			DrawerBackground = "#373740",
			AppbarBackground = "#27272f",
			AppbarText = "rgba(255,255,255, 0.70)",
			TextPrimary = "rgba(255,255,255, 0.70)",
			TextSecondary = "rgba(255,255,255, 0.50)",
			ActionDefault = "#adadb1",
			ActionDisabled = "rgba(255,255,255, 0.26)",
			ActionDisabledBackground = "rgba(255,255,255, 0.12)",
			Divider = "rgba(255,255,255, 0.12)",
			DividerLight = "rgba(255,255,255, 0.06)",
			TableLines = "rgba(255,255,255, 0.12)",
			LinesDefault = "rgba(255,255,255, 0.12)",
			LinesInputs = "rgba(255,255,255, 0.3)",
			TextDisabled = "rgba(255,255,255, 0.2)",
		},
	};

	private bool _isDarkMode;
	private bool IsDarkMode
	{
		get => _isDarkMode;
		set
		{
			if (_isDarkMode == value)
				return;

			_isDarkMode = value;
			StateHasChanged();
		}
	}

	protected override void OnInitialized()
	{
		ThemeService.IsDarkTheme
			.Subscribe(x => IsDarkMode = x);
	}
}
